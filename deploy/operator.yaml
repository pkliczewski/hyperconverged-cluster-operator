---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hyperconverged-cluster-operator
  name: hyperconverged-cluster-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hyperconverged-cluster-operator
  strategy: {}
  template:
    metadata:
      labels:
        name: hyperconverged-cluster-operator
    spec:
      containers:
      - command:
        - hyperconverged-cluster-operator
        env:
        - name: KVM_EMULATION
        - name: OPERATOR_IMAGE
          value: quay.io/kubevirt/hyperconverged-cluster-operator:1.1.0
        - name: OPERATOR_NAME
          value: hyperconverged-cluster-operator
        - name: OPERATOR_NAMESPACE
          value: kubevirt-hyperconverged
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WATCH_NAMESPACE
        - name: CONVERSION_CONTAINER
          value: quay.io/kubevirt/kubevirt-v2v-conversion:v2.0.0
        - name: VMWARE_CONTAINER
          value: quay.io/kubevirt/kubevirt-vmware:v2.0.0-3
        - name: SMBIOS
          value: |-
            Family: KubeVirt
            Manufacturer: KubeVirt
            Product: None
        - name: MACHINETYPE
        - name: HCO_KV_IO_VERSION
          value: 1.1.0
        image: quay.io/kubevirt/hyperconverged-cluster-operator:1.1.0
        imagePullPolicy: IfNotPresent
        name: hyperconverged-cluster-operator
        readinessProbe:
          exec:
            command:
            - stat
            - /tmp/operator-sdk-ready
          failureThreshold: 1
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      serviceAccountName: hyperconverged-cluster-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: virt-operator
  name: virt-operator
spec:
  replicas: 2
  selector:
    matchLabels:
      kubevirt.io: virt-operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        kubevirt.io: virt-operator
        prometheus.kubevirt.io: ""
      name: virt-operator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: kubevirt.io
                  operator: In
                  values:
                  - virt-operator
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - virt-operator
        - --port
        - "8443"
        - -v
        - "2"
        env:
        - name: OPERATOR_IMAGE
          value: docker.io/kubevirt/virt-operator:v0.28.0
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['olm.targetNamespaces']
        image: docker.io/kubevirt/virt-operator:v0.28.0
        imagePullPolicy: IfNotPresent
        name: virt-operator
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 8444
          name: webhooks
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          timeoutSeconds: 10
        resources: {}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubevirt-operator
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: cdi-operator
  name: cdi-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: cdi-operator
      operator.cdi.kubevirt.io: ""
  strategy: {}
  template:
    metadata:
      labels:
        name: cdi-operator
        operator.cdi.kubevirt.io: ""
    spec:
      containers:
      - env:
        - name: DEPLOY_CLUSTER_RESOURCES
          value: "true"
        - name: OPERATOR_VERSION
          value: v1.17.0
        - name: CONTROLLER_IMAGE
          value: docker.io/kubevirt/cdi-controller:v1.17.0
        - name: IMPORTER_IMAGE
          value: docker.io/kubevirt/cdi-importer:v1.17.0
        - name: CLONER_IMAGE
          value: docker.io/kubevirt/cdi-cloner:v1.17.0
        - name: APISERVER_IMAGE
          value: docker.io/kubevirt/cdi-apiserver:v1.17.0
        - name: UPLOAD_SERVER_IMAGE
          value: docker.io/kubevirt/cdi-uploadserver:v1.17.0
        - name: UPLOAD_PROXY_IMAGE
          value: docker.io/kubevirt/cdi-uploadproxy:v1.17.0
        - name: VERBOSITY
          value: "1"
        - name: PULL_POLICY
          value: IfNotPresent
        image: docker.io/kubevirt/cdi-operator:v1.17.0
        imagePullPolicy: IfNotPresent
        name: cdi-operator
        ports:
        - containerPort: 60000
          name: metrics
          protocol: TCP
        resources: {}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cdi-operator
